blueprint:
  name: Apollo Air Sensor Notifications
  source_url: https://raw.githubusercontent.com/amaisano/homeassistant-apollo-air-blueprint/refs/heads/main/apollo-air-blueprint.yaml
  author: atwixtor@gmail.com
  description: 'This blueprint monitors values from Apollo Air sensors and sends a
    notification if any values exceed the defined thresholds.'
  domain: automation
  input:
    device_id:
      name: AIR-1 Device
      description: Select the device to use the sensors from.
      selector:
        device:
          filter:
            - integration: esphome
              manufacturer: ApolloAutomation
              model: AIR-1
          entity:
            - domain: sensor
              device_class: temperature
          multiple: false
    notify_device:
      name: Notify Device
      description: Select the device to send the notification to.
      selector:
        device:
          integration: mobile_app
          multiple: false
    notify_options:
      name: Notification Options
      icon: mdi:information-box
      collapsed: true
      input:
        notify_interruption_level:
          name: Interruption Level - iOS Only
          description: >
            On devices running iOS 15 and later, you can configure the interruption level for your notifications to ensure they are delivered according to your preferences.
            Choose the desired interruption level from the dropdown list.
            Critical and time-sensitive notifications must be turned ON within the Home Assistant App, and time-sensitive notifications must be allowed in your Focus settings.
            For more information on interruption levels [Click Here](https://community.home-assistant.io/t/653754/192?u=blacky)
          default: active
          selector:
            select:
              mode: dropdown
              options:
                - label: Default
                  value: "active"
                - label: Critical Notifications
                  value: "critical"
                - label: Time Sensitive Notifications
                  value: "time-sensitive"
                - label: Quiet Notifications Without Waking Screen
                  value: "passive"
        notify_data:
          name: Android Only Options (Optional)
          description: >
            **High Priority** notifications ensure that you receive important alerts immediately.
            These notifications bypass normal delivery delays and are delivered instantly to your device.
            **Sticky Notification** ensure that important alerts are not dismissed when selected. They remain on your notification screen until you actively clear or swipe them away, ensuring that critical information stays visible until addressed.
            
            **Notification Channel** allow you to easily organize different notification settings,
            including notification sounds, vibrations, and other device-specific features.
            If you choose this option, please enter your desired channel name below.
          default: []
          selector:
            select:
              multiple: true
              options:
                - label: High Priority
                  value: "high_priority"
                - label: Sticky Notification
                  value: "sticky"
                - label: Notification Channel
                  value: "channel"
    time_settings:
      name: Notification Timing
      collapsed: true
      description: Set a repeating time pattern to receive reminders for items that exceed your thresholds.
      icon: mdi:clock-alert
      input:
        time_hours:
          name: Hours
          default: "*"
          selector:
            select:
              mode: dropdown
              options:
                - label: "Every Hour"
                  value: "*"
                - label: "Every 2 Hours"
                  value: "/2"
                - label: "Every 4 Hours"
                  value: "/4"
                - label: "Every 6 Hours"
                  value: "/6"
                - label: "Every 12 Hours"
                  value: "/12"
        time_minutes:
          name: Minutes
          default: "1"
          selector:
            select:
              mode: dropdown
              options:
                - label: "Default"
                  value: "1"
                - label: "Every 5 Minutes"
                  value: "/5"
                - label: "Every 10 Minutes"
                  value: "/10"
                - label: "Every 15 Minutes"
                  value: "/15"
                - label: "Every 30 Minutes"
                  value: "/30"
    temperature_settings:
      name: Temperature
      collapsed: true
      icon: mdi:thermometer
      input:
        min_temp:
          name: Minimum Temperature
          description: Set the minimum acceptable temperature.
          default: 0
          selector:
            number:
              min: -50.0
              max: 150.0
              step: 1.0
              mode: slider
        max_temp:
          name: Maximum Temperature
          description: Set the maximum acceptable temperature.
          default: 100
          selector:
            number:
              min: -50.0
              max: 150.0
              step: 1.0
              mode: slider
    humidity_settings:
      name: Humidity
      icon: mdi:water-percent
      collapsed: true
      input:
        min_humidity:
          name: Minimum Humidity
          description: Set the minimum acceptable humidity (%).
          default: 30
          selector:
            number:
              min: 0.0
              max: 100.0
              unit_of_measurement: '%'
              step: 1.0
              mode: slider
        max_humidity:
          name: Maximum Humidity
          description: Set the maximum acceptable humidity (%).
          default: 60
          selector:
            number:
              min: 0.0
              max: 100.0
              unit_of_measurement: '%'
              step: 1.0
              mode: slider
    pm1_settings:
      name: PM1
      icon: mdi:weather-fog
      collapsed: true
      input:
        max_pm1:
          name: Maximum PM1
          description: Set the maximum acceptable PM1 level (µg/m³).
          default: 10
          selector:
            number:
              min: 0.0
              max: 500.0
              unit_of_measurement: µg/m³
              step: 1.0
              mode: slider
    pm25_settings:
      name: PM2.5
      icon: mdi:weather-fog
      collapsed: true
      input:
        max_pm25:
          name: Maximum PM2.5
          description: Set the maximum acceptable PM2.5 level (µg/m³).
          default: 10
          selector:
            number:
              min: 0.0
              max: 500.0
              unit_of_measurement: µg/m³
              step: 1.0
              mode: slider
    pm4_settings:
      name: PM4
      icon: mdi:weather-fog
      collapsed: true
      input:
        max_pm4:
          name: Maximum PM4
          description: Set the maximum acceptable PM4 level (µg/m³).
          default: 10
          selector:
            number:
              min: 0.0
              max: 500.0
              unit_of_measurement: µg/m³
              step: 1.0
              mode: slider
    pm10_settings:
      name: PM10
      icon: mdi:weather-fog
      collapsed: true
      input:
        max_pm10:
          name: Maximum PM10
          description: Set the maximum acceptable PM10 level (µg/m³).
          default: 10
          selector:
            number:
              min: 0.0
              max: 500.0
              unit_of_measurement: µg/m³
              step: 1.0
              mode: slider
    voc_settings:
      name: VOC Index
      icon: mdi:chemical-weapon
      collapsed: true
      input:
        max_voc:
          name: Maximum VOC Index
          description: Set the maximum acceptable VOC Index value.
          default: 400
          selector:
            number:
              min: 0.0
              max: 500.0
              step: 1.0
              mode: slider
    nox_settings:
      name: NOx
      icon: mdi:weather-lightning
      collapsed: true
      input:
        max_nox:
          name: Maximum NOx
          description: Set the maximum acceptable NOx level (ppb).
          default: 30
          selector:
            number:
              min: 0.0
              max: 100.0
              unit_of_measurement: ppb
              step: 1.0
              mode: slider
    co2_settings:
      name: CO2
      icon: mdi:molecule-co2
      collapsed: true
      input:
        max_co2:
          name: Maximum CO2
          description: Set the maximum acceptable CO2 level (ppm).
          default: 1000
          selector:
            number:
              min: 0.0
              max: 5000.0
              unit_of_measurement: ppm
              step: 1.0
              mode: slider
    carbon_monoxide_settings:
      name: Carbon Monoxide
      icon: mdi:molecule-co
      collapsed: true
      input:
        max_carbon_monoxide:
          name: Maximum Carbon Monoxide
          description: Set the maximum acceptable carbon monoxide level (ppm).
          default: 10
          selector:
            number:
              min: 0.0
              max: 100.0
              unit_of_measurement: ppm
              step: 1.0
              mode: slider
    ethanol_settings:
      name: Ethanol
      icon: mdi:glass-wine
      collapsed: true
      input:
        max_ethanol:
          name: Maximum Ethanol
          description: Set the maximum acceptable ethanol level (ppb).
          default: 50
          selector:
            number:
              min: 0.0
              max: 500.0
              unit_of_measurement: ppb
              step: 1.0
              mode: slider
    hydrogen_settings:
      name: Hydrogen
      icon: mdi:gas-cylinder
      collapsed: true
      input:
        max_hydrogen:
          name: Maximum Hydrogen
          description: Set the maximum acceptable hydrogen level (ppm).
          default: 1
          selector:
            number:
              min: 0.0
              max: 10.0
              unit_of_measurement: ppm
              step: 1.0
              mode: slider
    no2_settings:
      name: NO2
      icon: mdi:gas-cylinder
      collapsed: true
      input:
        max_no2:
          name: Maximum NO2
          description: Set the maximum acceptable NO2 level (ppb).
          default: 20
          selector:
            number:
              min: 0.0
              max: 200.0
              unit_of_measurement: ppb
              step: 1.0
              mode: slider
    ammonia_settings:
      name: Ammonia
      icon: mdi:chemical-weapon
      collapsed: true
      input:
        max_ammonia:
          name: Maximum Ammonia
          description: Set the maximum acceptable ammonia level (ppm).
          default: 10
          selector:
            number:
              min: 0.0
              max: 50.0
              unit_of_measurement: ppm
              step: 1.0
              mode: slider
    methane_settings:
      name: Methane
      icon: mdi:chemical-weapon
      collapsed: true
      input:
        max_methane:
          name: Maximum Methane
          description: Set the maximum acceptable methane level (ppm).
          default: 1500
          selector:
            number:
              min: 0.0
              max: 5000.0
              unit_of_measurement: ppm
              step: 10.0
              mode: slider

trigger_variables:

  # Master device and its entities

  device_id: !input device_id
  entities: >-
    {{ device_entities(device_id)|select('search', '^sensor.')|reject('search', 'esp')|list }}

# Sensors and limits

  temperature_sensor: >-
    {{ entities|select('search', 'temperature')|list|first }}
  min_temp: !input min_temp
  max_temp: !input max_temp
  humidity_sensor: >-
    {{ entities|select('search', 'humidity')|list|first }}
  min_humidity: !input min_humidity
  max_humidity: !input max_humidity
  pm1_sensor: >-
    {{ entities|select('search', 'pm_1_m')|list|first }}
  max_pm1: !input max_pm1
  pm25_sensor: >-
    {{ entities|select('search', 'pm_2_5_m')|list|first }}
  max_pm25: !input max_pm25
  pm4_sensor: >-
    {{ entities|select('search', 'pm_4_m')|list|first }}
  max_pm4: !input max_pm4
  pm10_sensor: >-
    {{ entities|select('search', 'pm_10_m')|list|first }}
  max_pm10: !input max_pm10
  voc_sensor: >-
    {{ entities|select('search', 'voc')|list|first }}
  max_voc: !input max_voc
  nox_sensor: >-
    {{ entities|select('search', 'nox')|list|first }}
  max_nox: !input max_nox
  co2_sensor: >-
    {{ entities|select('search', 'co2')|list|first }}
  max_co2: !input max_co2
  carbon_monoxide_sensor: >-
    {{ entities|select('search', 'carbon_monoxide')|list|first }}
  max_carbon_monoxide: !input max_carbon_monoxide
  ethanol_sensor: >-
    {{ entities|select('search', 'ethanol')|list|first }}
  max_ethanol: !input max_ethanol
  hydrogen_sensor: >-
    {{ entities|select('search', 'hydrogen')|list|first }}
  max_hydrogen: !input max_hydrogen
  no2_sensor: >-
    {{ entities|select('search', 'nitrogen_dioxide')|list|first }}
  max_no2: !input max_no2
  ammonia_sensor: >-
    {{ entities|select('search', 'ammonia')|list|first }}
  max_ammonia: !input max_ammonia
  methane_sensor: >-
    {{ entities|select('search', 'methane')|list|first }}
  max_methane: !input max_methane

# Notification data

  notify_device: !input notify_device
  notify_interruption_level: !input notify_interruption_level
  notify_data: !input notify_data
  device_message_data: >-
    {% set message = namespace(data={}) %}
    {% set push = namespace(data={}) %}
    {% if notify_interruption_level in ['active', 'critical', 'time-sensitive', 'passive'] %}
      {% set push.data = dict(push.data, **{ 'interruption-level': notify_interruption_level }) %}
    {% endif %}
    {% if push.data %}
      {% set message.data = dict(message.data, **{ 'push': push.data }) %}
    {% endif %}
    {% if 'high_priority' in notify_data %}
      {% set message.data = dict(message.data, **{ 'ttl': 0, 'priority': 'high' }) %}
    {% endif %}
    {% if 'sticky' in notify_data %}
      {% set message.data = dict(message.data, **{ 'sticky': "true" }) %}
    {% endif %}
    {{ message.data }}

triggers:
- trigger: time_pattern
  hours: !input time_hours
  minutes: !input time_minutes
  id: time
- trigger: template
  value_template: "{{ states(temperature_sensor)|float(0) > max_temp }}"
  id: temperature_max
- trigger: template
  value_template: "{{ states(temperature_sensor)|float(0) < min_temp }}"
  id: temperature_min
- trigger: template
  value_template: "{{ states(humidity_sensor)|float(0) > max_humidity }}"
  id: humidity_max
- trigger: template
  value_template: "{{ states(humidity_sensor)|float(0) < min_humidity }}"
  id: humidity_min
- trigger: template
  value_template: "{{ states(pm1_sensor)|float(0) > max_pm1 }}"
  id: pm1
- trigger: template
  value_template: "{{ states(pm25_sensor)|float(0) > max_pm25 }}"
  id: pm25
- trigger: template
  value_template: "{{ states(pm4_sensor)|float(0) > max_pm4 }}"
  id: pm4
- trigger: template
  value_template: "{{ states(pm10_sensor)|float(0) > max_pm10 }}"
  id: pm10
- trigger: template
  value_template: "{{ states(voc_sensor)|float(0) > max_voc }}"
  id: voc
- trigger: template
  value_template: "{{ states(nox_sensor)|float(0) > max_nox }}"
  id: nox
- trigger: template
  value_template: "{{ states(co2_sensor)|float(0) > max_co2 }}"
  id: co2
- trigger: template
  value_template: "{{ states(carbon_monoxide_sensor)|float(0) > max_carbon_monoxide }}"
  id: co1
- trigger: template
  value_template: "{{ states(ethanol_sensor)|float(0) > max_ethanol }}"
  id: ethanol
- trigger: template
  value_template: "{{ states(hydrogen_sensor)|float(0) > max_hydrogen }}"
  id: hydrogen
- trigger: template
  value_template: "{{ states(no2_sensor)|float(0) > max_no2 }}"
  id: no2
- trigger: template
  value_template: "{{ states(ammonia_sensor)|float(0) > max_ammonia }}"
  id: ammonia
- trigger: template
  value_template: "{{ states(methane_sensor)|float(0) > max_methane }}"
  id: methane

conditions:
- condition: template
  value_template: "{{ states(temperature_sensor) not in ['unavailable'] }}"

action:
- alias: Max Temperature Alert
  if:
  - condition: template
    value_template: "{{ states(temperature_sensor)|float(0) > max_temp and trigger.id in ['time', 'temperature_max'] }}"
  then:
  - device_id: !input notify_device
    domain: mobile_app
    type: notify
    title: '{{ area_name(temperature_sensor) }} Temperature Alert'
    message: The temperature is {{ states(temperature_sensor) }}{{ state_attr(temperature_sensor, "unit_of_measurement") }} which is above
      the maximum of {{ max_temp }}{{ state_attr(temperature_sensor, "unit_of_measurement") }}.
    data: "{{ device_message_data }}"
- alias: Min Temperature Alert
  if:
  - condition: template
    value_template: "{{ states(temperature_sensor)|float(0) < min_temp and trigger.id in ['time', 'temperature_min'] }}"
  then:
  - device_id: !input notify_device
    domain: mobile_app
    type: notify
    title: '{{ area_name(temperature_sensor) }} Temperature Alert'
    message: The temperature is {{ states(temperature_sensor) }}{{ state_attr(temperature_sensor, "unit_of_measurement") }} which is below
      the minimum of {{ min_temp }}{{ state_attr(temperature_sensor, "unit_of_measurement") }}.
    data: "{{ device_message_data }}"
- alias: Max Humidity Alert
  if:
  - condition: template
    value_template: "{{ states(humidity_sensor)|float(0) > max_humidity and trigger.id in ['time', 'humidity_max'] }}"
  then:
  - device_id: !input notify_device
    domain: mobile_app
    type: notify
    title: '{{ area_name(humidity_sensor) }} Humidity Alert'
    message: The humidity is {{ states(humidity_sensor) }}% which is above the maximum
      of {{ max_humidity }}%.
    data: "{{ device_message_data }}"
- alias: Min Humidity Alert
  if:
  - condition: template
    value_template: "{{ states(humidity_sensor)|float(0) < min_humidity and trigger.id in ['time', 'humidity_min'] }}"
  then:
  - device_id: !input notify_device
    domain: mobile_app
    type: notify
    title: '{{ area_name(humidity_sensor) }} Humidity Alert'
    message: The humidity is {{ states(humidity_sensor) }}% which is below the minimum
      of {{ min_humidity }}%.
    data: "{{ device_message_data }}"
- alias: Max PM1 Alert
  if:
  - condition: template
    value_template: "{{ states(pm1_sensor)|float(0) > max_pm1 and trigger.id in ['time', 'pm1'] }}"
  then:
  - device_id: !input notify_device
    domain: mobile_app
    type: notify
    title: '{{ area_name(pm1_sensor)}} PM1 Alert'
    message: The PM1 level is {{ states(pm1_sensor) }}µg/m³ which is above the maximum
      of {{ max_pm1 }}µg/m³.
    data: "{{ device_message_data }}"
- alias: Max PM2.5 Alert
  if:
  - condition: template
    value_template: "{{ states(pm25_sensor)|float(0) > max_pm25 and trigger.id in ['time', 'pm25'] }}"
  then:
  - device_id: !input notify_device
    domain: mobile_app
    type: notify
    title: '{{ area_name(pm25_sensor) }} PM2.5 Alert'
    message: The PM2.5 level is {{ states(pm25_sensor) }}µg/m³ which is above the
      maximum of {{ max_pm25 }}µg/m³.
    data: "{{ device_message_data }}"
- alias: Max PM4 Alert
  if:
  - condition: template
    value_template: "{{ states(pm4_sensor)|float(0) > max_pm4 and trigger.id in ['time', 'pm4'] }}"
  then:
  - device_id: !input notify_device
    domain: mobile_app
    type: notify
    title: '{{ area_name(pm4_sensor) }} PM4 Alert'
    message: The PM4 level is {{ states(pm4_sensor) }}µg/m³ which is above the maximum
      of {{ max_pm4 }}µg/m³.
    data: "{{ device_message_data }}"
- alias: Max PM10 Alert
  if:
  - condition: template
    value_template: "{{ states(pm10_sensor)|float(0) > max_pm10 and trigger.id in ['time', 'pm10'] }}"
  then:
  - device_id: !input notify_device
    domain: mobile_app
    type: notify
    title: '{{ area_name(pm10_sensor) }} PM10 Alert'
    message: The PM10 level is {{ states(pm10_sensor) }}µg/m³ which is above the maximum
      of {{ max_pm10 }}µg/m³.
    data: "{{ device_message_data }}"
- alias: Max VOC Index Alert
  if:
  - condition: template
    value_template: "{{ states(voc_sensor)|float(0) > max_voc and trigger.id in ['time', 'voc'] }}"
  then:
  - device_id: !input notify_device
    domain: mobile_app
    type: notify
    title: '{{ area_name(voc_sensor) }} VOC Index Alert'
    message: The VOC Index is {{ states(voc_sensor) }} which is above the maximum
      of {{ max_voc }}.
    data: "{{ device_message_data }}"
- alias: Max NOx Alert
  if:
  - condition: template
    value_template: "{{ states(nox_sensor)|float(0) > max_nox and trigger.id in ['time', 'nox'] }}"
  then:
  - device_id: !input notify_device
    domain: mobile_app
    type: notify
    title: '{{ area_name(nox_sensor) }} NOx Alert'
    message: The NOx level is {{ states(nox_sensor) }}ppb which is above the maximum
      of {{ max_nox }}ppb.
    data: "{{ device_message_data }}"
- alias: Max CO2 Alert
  if:
  - condition: template
    value_template: "{{ states(co2_sensor)|float(0) > max_co2 and trigger.id in ['time', 'co2'] }}"
  then:
  - device_id: !input notify_device
    domain: mobile_app
    type: notify
    title: '{{ area_name(co2_sensor) }} CO2 Alert'
    message: The CO2 level is {{ states(co2_sensor) }}ppm which is above the maximum
      of {{ max_co2 }}ppm.
    data: "{{ device_message_data }}"
- alias: Max CO Alert
  if:
  - condition: template
    value_template: "{{ states(carbon_monoxide_sensor)|float(0) > max_carbon_monoxide and trigger.id in ['time', 'co1'] }}"
  then:
  - device_id: !input notify_device
    domain: mobile_app
    type: notify
    title: '{{ area_name(carbon_monoxide_sensor) }} Carbon Monoxide Alert'
    message: The Carbon Monoxide level is {{ states(carbon_monoxide_sensor) }}ppm
      which is above the maximum of {{ max_carbon_monoxide }}ppm.
    data: "{{ device_message_data }}"
- alias: Max Ethanol Alert
  if:
  - condition: template
    value_template: "{{ states(ethanol_sensor)|float(0) > max_ethanol and trigger.id in ['time', 'ethanol'] }}"
  then:
  - device_id: !input notify_device
    domain: mobile_app
    type: notify
    title: '{{ area_name(ethanol_sensor) }} Ethanol Alert'
    message: The ethanol level is {{ states(ethanol_sensor) }}ppb which is above the
      maximum of {{ max_ethanol }}ppb.
    data: "{{ device_message_data }}"
- alias: Max Hydrogen Alert
  if:
  - condition: template
    value_template: "{{ states(hydrogen_sensor)|float(0) > max_hydrogen and trigger.id in ['time', 'hydrogen'] }}"
  then:
  - device_id: !input notify_device
    domain: mobile_app
    type: notify
    title: '{{ area_name(hydrogen_sensor) }} Hydrogen Alert'
    message: The hydrogen level is {{ states(hydrogen_sensor) }}ppm which is above
      the maximum of {{ max_hydrogen }}ppm.
    data: "{{ device_message_data }}"
- alias: Max NO2 Alert
  if:
  - condition: template
    value_template: "{{ states(no2_sensor)|float(0) > max_no2 and trigger.id in ['time', 'no2'] }}"
  then:
  - device_id: !input notify_device
    domain: mobile_app
    type: notify
    title: '{{ area_name(no2_sensor) }} NO2 Alert'
    message: The NO2 level is {{ states(no2_sensor) }}ppb which is above the maximum
      of {{ max_no2 }}ppb.
    data: "{{ device_message_data }}"
- alias: Max Ammonia Alert
  if:
  - condition: template
    value_template: "{{ states(ammonia_sensor)|float(0) > max_ammonia and trigger.id in ['time', 'ammonia'] }}"
  then:
  - device_id: !input notify_device
    domain: mobile_app
    type: notify
    title: '{{ area_name(ammonia_sensor) }} Ammonia Alert'
    message: The ammonia level is {{ states(ammonia_sensor) }}ppm which is above the
      maximum of {{ max_ammonia }}ppm.
    data: "{{ device_message_data }}"
- alias: Max Methane Alert
  if:
  - condition: template
    value_template: "{{ states(methane_sensor)|float(0) > max_methane and trigger.id in ['time', 'methane'] }}"
  then:
  - device_id: !input notify_device
    domain: mobile_app
    type: notify
    title: '{{ area_name(methane_sensor) }} Methane Alert'
    message: The methane level is {{ states(methane_sensor) }}ppm which is above the
      maximum of {{ max_methane }}ppm.
    data: "{{ device_message_data }}"
